services:
  backend:
    build:
      context: .
    container_name: backend
    volumes:
      - .:/app
    environment:
      - FLASK_APP=run.py
      - FLASK_DB_TYPE=postgres
      - FLASK_DB_USER=postgres
      - FLASK_DB_NAME=postgres
      - FLASK_DB_PASSWORD=secretpass
      - FLASK_DB_HOST=postgres
      - FLASK_DB_PORT=5432
    ports:
      - "5500:5500"
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secretpass
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    command: /bin/bash -c "until nc -z backend 5500; do echo 'Waiting for backend...'; sleep 2; done; nginx -g 'daemon off;'"
    restart: always

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge